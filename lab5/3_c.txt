#define _CRT_SECURE_NO_WARNINGS

/* Program przykładowy ilustrujący operacje SSE procesora
 Program jest przystosowany do współpracy z podprogramem
 zakodowanym w asemblerze (plik arytm_SSE.asm)
*/
#include <stdio.h>
extern "C" void dodaj_SSE(float*, float*, float*);
extern "C" void pierwiastek_SSE(float*, float*);
extern "C" void odwrotnosc_SSE(float*, float*);
extern "C" void sumy(char*, char*);
int main()
{

	float p[4] = { 1.0, 1.5, 2.0, 2.5 };
	float q[4] = { 0.25, -0.5, 1.0, -1.75 };
	float r[4];
	dodaj_SSE(p, q, r);
	printf("\n%f %f %f %f", p[0], p[1], p[2], p[3]);
	printf("\n%f %f %f %f", q[0], q[1], q[2], q[3]);
	printf("\n%f %f %f %f", r[0], r[1], r[2], r[3]);
	printf("\n\nObliczanie pierwiastka");
	pierwiastek_SSE(p, r);
	printf("\n%f %f %f %f", p[0], p[1], p[2], p[3]);
	printf("\n%f %f %f %f", r[0], r[1], r[2], r[3]);
	printf("\n\nObliczanie odwrotności - ze względu na stosowanie");
	printf("\n12-bitowej mantysy obliczenia są mało dokładne");
	odwrotnosc_SSE(p, r);
	printf("\n%f %f %f %f", p[0], p[1], p[2], p[3]);
	printf("\n%f %f %f %f", r[0], r[1], r[2], r[3]);

	char liczby_A[16] = { -128, -127, -126, -125, -124, -123, -122,
-121, 120, 121, 122, 123, 124, 125, 126, 127 };
	char liczby_B[16] = { -3, -3, -3, -3, -3, -3, -3, -3,
	3, 3, 3, 3, 3, 3, 3, 3 };
	sumy(liczby_A, liczby_B);
	printf("Dodawanie: ");
	printf("\n%d %d %d %d %d %d %d %d", liczby_A[0], liczby_A[1], liczby_A[2], liczby_A[3], liczby_A[4], liczby_A[5], liczby_A[6], liczby_A[7]);
	printf("\n%d %d %d %d %d %d %d %d", liczby_A[8], liczby_A[9], liczby_A[10], liczby_A[11], liczby_A[12], liczby_A[13], liczby_A[14], liczby_A[15]);
	return 0;
}